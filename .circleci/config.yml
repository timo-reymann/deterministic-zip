version: '2.1'

job_defaults: &job_defaults
  filters:
    tags:
      only: /.*/


orbs:
  github-cli: circleci/github-cli@2.3.0
  docker: circleci/docker@2.6.0
  codecov: codecov/codecov@4.1.0

executors:
  go:
    docker:
      - image: cimg/go:1.21
  python:
    docker:
      - image: cimg/python:3.12


jobs:
  test:
    executor: go
    steps:
      - checkout
      - run:
          name: Run tests
          command: |
            gotestsum --junitfile unit-tests.xml
            make save-coverage-report
      - run:
          name: Get test coverage
          command: |
            go test -race -coverprofile=coverage.txt -covermode=atomic  -v ./...
      - codecov/upload
      - store_test_results:
          path: unit-tests.xml
      - store_artifacts:
          path: unit-tests.xml
      - store_artifacts:
          path: coverage.html

  build:
    executor: go
    steps:
      - checkout
      - run:
          name: Build binaries
          command: make build
      - persist_to_workspace:
          root: ./
          paths:
            - dist/

  publish_docker_image:
    machine:
      image: ubuntu-2004:current    
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - setup_remote_docker:
          version: 20.10.14
      - run:
          name: Build and publish image
          command: |
            echo "$DOCKER_TOKEN" | docker login -u "$DOCKER_USERNAME" --password-stdin
            docker buildx create --use
            make build-docker
      - docker/update-description:
          image: timoreymann/deterministic-zip
          docker-username: DOCKER_USERNAME
          docker-password: DOCKER_TOKEN
 
  update_homebrew_formula:
    executor: python
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Create new Homebrew formula
          command: |
            git clone https://${GITHUB_TOKEN}@github.com/timo-reymann/homebrew-deterministic-zip.git
            cd homebrew-deterministic-zip

            python3 ./generate.py \
              --version $CIRCLE_TAG \
              --sha256-mac $(<../dist/deterministic-zip_darwin-amd64.sha256)
            git config --global user.name "CircleCI"
            git config --global user.email no-reply@circleci.com
            git add .
            git commit -m "chore: Update formula for version $CIRCLE_TAG" || true
            git push

  create_github_release:
    executor: go
    steps:
      - checkout
      - attach_workspace:
          at: .
          name: Retrieve persisted binaries
      -  github-cli/install:
          version: "2.21.2"
      - run:
          name: Publish release
          command: |
            gh release create ${CIRCLE_TAG} --generate-notes dist/*

  publish_python_wheel:
    executor: python
    steps:
      - checkout
      - attach_workspace:
          at: .
          name: Retrieve persisted binaries
      - run:
          name: Install dependencies
          command: |
            pip install twine==4.* binary_wheel_builder[cli]==3.*
      - run:
          name: Build wheel
          command: |
            mkdir -p dist/wheel/
            binary-wheel-builder --wheel-spec wheel.yaml --dist-folder dist/wheel/
      - run:
          name: Upload wheel
          command: |
            twine upload -r pypi dist/wheel/* 

workflows:
  version: 2
  build:
    jobs:
      - test:
          <<: *job_defaults

      - build:
          <<: *job_defaults
          requires:
            - test

      - publish_docker_image:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
          requires:
            - build

      - create_github_release:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
          requires:
            - build

      - update_homebrew_formula:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
          requires:
            - create_github_release

      - publish_python_wheel:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
          requires:
            - build
